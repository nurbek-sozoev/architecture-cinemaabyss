#!/bin/bash

# CinemaAbyss Kong Configuration Management Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π Kong –∏ –∫–∞–Ω–∞—Ä–µ–µ—á–Ω—ã–º–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è–º–∏

set -e

KONG_ADMIN_URL="http://localhost:3201"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "üîß CinemaAbyss Kong Configuration Manager"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞] [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  status                    - –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ Kong"
    echo "  routes                    - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã"
    echo "  services                  - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "  upstreams                 - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ upstreams"
    echo "  targets                   - –ü–æ–∫–∞–∑–∞—Ç—å targets –¥–ª—è upstreams"
    echo "  migration [–ø—Ä–æ—Ü–µ–Ω—Ç]       - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ (0-100)"
    echo "  health                    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  metrics                   - –ü–æ–∫–∞–∑–∞—Ç—å Prometheus –º–µ—Ç—Ä–∏–∫–∏"
    echo "  reload                    - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ kong.yml"
    echo "  test-traffic [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã"
    echo "  logs                      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Kong"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 migration 75           # 75% —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å"
    echo "  $0 test-traffic 100       # –û—Ç–ø—Ä–∞–≤–∏—Ç—å 100 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
    echo "  $0 health                 # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Kong
check_kong() {
    if ! curl -s "$KONG_ADMIN_URL/status" > /dev/null; then
        echo "‚ùå Kong –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $KONG_ADMIN_URL"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ Kong —Å –ø–æ–º–æ—â—å—é: ./scripts/start.sh"
        exit 1
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ Kong
show_status() {
    echo "üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ Kong Gateway:"
    curl -s "$KONG_ADMIN_URL/status" | jq '.' || echo "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã
show_routes() {
    echo "üó∫  –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:"
    curl -s "$KONG_ADMIN_URL/routes" | jq '.data[] | {name: .name, paths: .paths, methods: .methods, service: .service.name}' || echo "–ú–∞—Ä—à—Ä—É—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã
show_services() {
    echo "üîß –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    curl -s "$KONG_ADMIN_URL/services" | jq '.data[] | {name: .name, url: .url, tags: .tags}' || echo "–°–µ—Ä–≤–∏—Å—ã –ø–æ–ª—É—á–µ–Ω—ã (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"
}

# –ü–æ–∫–∞–∑–∞—Ç—å upstreams
show_upstreams() {
    echo "‚öñÔ∏è  –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ upstreams:"
    curl -s "$KONG_ADMIN_URL/upstreams" | jq '.data[] | {name: .name, algorithm: .algorithm, tags: .tags}' || echo "Upstreams –ø–æ–ª—É—á–µ–Ω—ã (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"
}

# –ü–æ–∫–∞–∑–∞—Ç—å targets
show_targets() {
    echo "üéØ Targets –¥–ª—è upstreams:"
    
    upstreams=$(curl -s "$KONG_ADMIN_URL/upstreams" | jq -r '.data[].name' 2>/dev/null || echo "movies-upstream")
    
    for upstream in $upstreams; do
        echo ""
        echo "üìç Upstream: $upstream"
        curl -s "$KONG_ADMIN_URL/upstreams/$upstream/targets" | jq '.data[] | {target: .target, weight: .weight, health: .health}' 2>/dev/null || echo "   Targets –ø–æ–ª—É—á–µ–Ω—ã (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"
    done
}

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
set_migration() {
    local percent=$1
    
    if [[ ! $percent =~ ^[0-9]+$ ]] || [ $percent -lt 0 ] || [ $percent -gt 100 ]; then
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: $percent. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100"
        exit 1
    fi
    
    local monolith_weight=$((100 - percent))
    local microservice_weight=$percent
    
    echo "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: $percent% –≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å, $monolith_weight% –≤ –º–æ–Ω–æ–ª–∏—Ç"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Å–æ–≤ targets
    echo "‚öñÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Å–∞ –º–æ–Ω–æ–ª–∏—Ç–∞: $monolith_weight"
    curl -s -X PATCH "$KONG_ADMIN_URL/upstreams/movies-upstream/targets/monolith:3280" \
        -d "weight=$monolith_weight" || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Å –º–æ–Ω–æ–ª–∏—Ç–∞"
    
    echo "‚öñÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Å–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞: $microservice_weight"
    curl -s -X PATCH "$KONG_ADMIN_URL/upstreams/movies-upstream/targets/movies-service:3281" \
        -d "weight=$microservice_weight" || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞"
    
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞: $percent% —Ç—Ä–∞—Ñ–∏–∫–∞ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –≤–µ—Å–∞
    show_targets
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
check_health() {
    echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–æ–ª–∏—Ç–∞
    echo "üîç –ú–æ–Ω–æ–ª–∏—Ç (localhost:3280):"
    if curl -s "http://localhost:3280/health" > /dev/null 2>&1; then
        echo "  ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω"
    else
        echo "  ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ —Ñ–∏–ª—å–º–æ–≤
    echo "üîç –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å —Ñ–∏–ª—å–º–æ–≤ (localhost:3281):"
    if curl -s "http://localhost:3281/health" > /dev/null 2>&1; then
        echo "  ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω"
    else
        echo "  ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ —Å–æ–±—ã—Ç–∏–π
    echo "üîç –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å —Å–æ–±—ã—Ç–∏–π (localhost:3282):"
    if curl -s "http://localhost:3282/health" > /dev/null 2>&1; then
        echo "  ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω"
    else
        echo "  ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # Kong health check
    echo "üîç Kong Upstream health:"
    curl -s "$KONG_ADMIN_URL/upstreams/movies-upstream/health" | jq '.' 2>/dev/null || echo "  –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏
show_metrics() {
    echo "üìä Prometheus –º–µ—Ç—Ä–∏–∫–∏ Kong:"
    curl -s "$KONG_ADMIN_URL/metrics"
}

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
reload_config() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ kong.yml..."
    
    if [ ! -f kong.yml ]; then
        echo "‚ùå –§–∞–π–ª kong.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    # –î–ª—è DB-less —Ä–µ–∂–∏–º–∞
    curl -X POST "$KONG_ADMIN_URL/config" \
        -F config=@kong.yml && echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞—Ñ–∏–∫–∞
test_traffic() {
    local count=${1:-10}
    
    echo "üß™ –û—Ç–ø—Ä–∞–≤–∫–∞ $count —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ /api/movies..."
    
    local monolith_count=0
    local microservice_count=0
    
    for i in $(seq 1 $count); do
        response=$(curl -s -w "%{http_code}" "http://localhost:3200/api/movies" -o /dev/null)
        
        if [ "$response" = "200" ]; then
            echo -n "‚úÖ"
        else
            echo -n "‚ùå"
        fi
        
        # –ü—Ä–æ—Å—Ç–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏)
        if [ $((i % 2)) -eq 0 ]; then
            ((microservice_count++))
        else
            ((monolith_count++))
        fi
        
        sleep 0.1
    done
    
    echo ""
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "  –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: $count"
    echo "  –£—Å–ø–µ—à–Ω—ã—Ö: ‚úÖ"
    echo "  –ù–µ—É–¥–∞—á–Ω—ã—Ö: ‚ùå"
    echo ""
    echo "üí° –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ª–æ–≥–∏ Kong"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
show_logs() {
    echo "üìã –õ–æ–≥–∏ Kong (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):"
    docker-compose logs --tail=50 kong
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case ${1:-help} in
    "status")
        check_kong
        show_status
        ;;
    "routes")
        check_kong
        show_routes
        ;;
    "services")
        check_kong
        show_services
        ;;
    "upstreams")
        check_kong
        show_upstreams
        ;;
    "targets")
        check_kong
        show_targets
        ;;
    "migration")
        check_kong
        set_migration "$2"
        ;;
    "health")
        check_kong
        check_health
        ;;
    "metrics")
        check_kong
        show_metrics
        ;;
    "reload")
        check_kong
        reload_config
        ;;
    "test-traffic")
        check_kong
        test_traffic "$2"
        ;;
    "logs")
        show_logs
        ;;
    "help"|*)
        show_help
        ;;
esac
