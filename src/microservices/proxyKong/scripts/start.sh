#!/bin/bash

# CinemaAbyss Kong Proxy - Start Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Kong Gateway —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ CinemaAbyss Kong Proxy..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    local url=$1
    local service_name=$2
    echo "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ $service_name ($url)..."
    
    for i in {1..30}; do
        if curl -s "$url" > /dev/null 2>&1; then
            echo "‚úÖ $service_name –¥–æ—Å—Ç—É–ø–µ–Ω"
            return 0
        fi
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ $service_name... ($i/30)"
        sleep 2
    done
    
    echo "‚ùå $service_name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ 60 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
cd "$(dirname "$0")/.."

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    cp env.example .env
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≤–Ω–µ—à–Ω–µ–π —Å–µ—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–∏ cinemaabyss-network..."
if ! docker network ls | grep -q cinemaabyss-network; then
    echo "üåê –°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–π —Å–µ—Ç–∏ cinemaabyss-network..."
    docker network create cinemaabyss-network
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down --remove-orphans

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ Kong Gateway..."
docker-compose up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 5
docker-compose ps

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Kong
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Kong..."
check_service "http://localhost:8001/status" "Kong Admin API"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Kong Proxy
check_service "http://localhost:8000/" "Kong Proxy"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üîß –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if curl -s http://localhost:8001/services | grep -q "monolith-service"; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Kong –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏..."
    if [ -f kong.yml ]; then
        curl -X POST http://localhost:8001/config \
            -F config=@kong.yml || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    fi
fi

# –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
echo ""
echo "üéâ Kong Gateway —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "   üåê Kong Proxy:     http://localhost:8000"
echo "   ‚öôÔ∏è  Kong Admin API: http://localhost:8001"
echo "   üñ•  Konga UI:       http://localhost:1337"
echo ""
echo "üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   curl http://localhost:8000/api/movies"
echo "   curl http://localhost:8001/services"
echo ""
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   docker-compose logs -f kong"
echo "   curl http://localhost:8001/metrics"
echo ""

# –ü–æ–∫–∞–∑ —Ç–µ–∫—É—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
echo "üó∫  –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:"
curl -s http://localhost:8001/routes | jq '.data[] | {name: .name, paths: .paths, service: .service.name}' 2>/dev/null || echo "   (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞)"

echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!"
